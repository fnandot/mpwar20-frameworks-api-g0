# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  app_log_summary_data_dir: '%env(resolve:APP_LOG_SUMMARY_DATA_DIR)%'

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    bind:
      string $kernelLogsDir: '%kernel.logs_dir%'
      string $kernelEnvironment: '%kernel.environment%'
      LaSalle\GroupZero\Logging\Domain\Model\Repository\LogEntryRepository: '@LaSalle\GroupZero\Logging\Infrastructure\Persistence\Filesystem\LogEntryFilesystemRepository'
      #            LaSalle\GroupZero\Logging\Domain\Model\Repository\LogSummaryRepository: '@LaSalle\GroupZero\Logging\Infrastructure\Persistence\Doctrine\Repository\LogSummaryDbalRepository'
      LaSalle\GroupZero\Logging\Domain\Model\Repository\LogSummaryRepository: '@LaSalle\GroupZero\Logging\Infrastructure\Persistence\Doctrine\Repository\LogSummaryOrmRepository'
  #            LaSalle\GroupZero\Logging\Domain\Model\Repository\LogSummaryRepository: '@LaSalle\GroupZero\Logging\Infrastructure\Persistence\Doctrine\Repository\LogSummaryOrmDqlRepository'
  #            LaSalle\GroupZero\Logging\Domain\Model\Repository\LogSummaryRepository: '@LaSalle\GroupZero\Logging\Infrastructure\Persistence\Pdo\LogSummaryPdoRepository'

  #    LaSalle\GroupZero\Logging\Domain\Model\Repository\LogEntryRepository:
  #        alias: 'LaSalle\GroupZero\Logging\Infrastructure\Persistence\Filesystem\LogEntryFilesystemRepository'
  #
  #    LaSalle\GroupZero\Logging\Domain\Model\Repository\LogSummaryRepository:
  #        alias: 'LaSalle\GroupZero\Logging\Infrastructure\Persistence\Pdo\LogSummaryPdoRepository'

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  # Overrides all previously defined services under LaSalle\GroupZero\ namespace
  LaSalle\GroupZero\Logging\:
    resource: '%kernel.project_dir%/src/Logging/{Application,Domain,Infrastructure}/'
    exclude:
      - '%kernel.project_dir%/src/Logging/Infrastructure/Framework/{DependencyInjection}'
      - '%kernel.project_dir%/src/Logging/Domain/Model/{Aggregate,ValueObject,Exception}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  LaSalle\GroupZero\Logging\Infrastructure\Framework\Controller\:
    resource: '%kernel.project_dir%/src/Logging/Infrastructure/Framework/Controller'
    tags: ['controller.service_arguments']

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  #    LaSalle\GroupZero\Logging\Infrastructure\Services\ApplicationServiceContainer:
  #        arguments:
  #            $services:
  #                - '@LaSalle\GroupZero\Logging\Application\GetLogEntriesByEnvironment'
  #                - '@LaSalle\GroupZero\Logging\Application\GetLogSummariesByEnvironment'

  #    LaSalle\GroupZero\Logging\Application\GetLogEntriesByEnvironment:
  #        tags:
  #            - { name: group_zero.application_service }
  #
  #    LaSalle\GroupZero\Logging\Application\GetLogSummariesByEnvironment:
  #        tags:
  #            - { name: group_zero.application_service }

  # Not needed because ApplicationService interface is autoconfigured kernel
  #    _instanceof:
  #        # services whose classes are instances of CustomInterface will be tagged automatically
  #        LaSalle\GroupZero\Logging\Application\ApplicationService:
  #            tags: ['group_zero.application_service']

  # Workaround just to have PSR-3 messages processed on our custom handler
  LaSalle\GroupZero\Logging\Infrastructure\Monolog\EventDispatcherHandler:
    arguments:
      $kernelEnvironment: '%kernel.environment%'
    calls:
      - method: pushProcessor
        arguments:
          - '@monolog.processor.psr_log_message'

  LaSalle\GroupZero\Logging\Infrastructure\Persistence\Filesystem\FilesystemLogSummaryRepository:
    arguments:
      $directory: '%app_log_summary_data_dir%'
      $defaultEnvironment: '%env(APP_ENV)%'

  #    LaSalle\GroupZero\Logging\Domain\Model\Event\Handler\IncreaseLogSummaryOnLogEntryCreated:
  #        autoconfigure: false
  #        tags:
  #            - {name: kernel.event_listener, event: LaSalle\GroupZero\Logging\Domain\Model\Event\LogEntryCreatedDomainEvent }
  #            - { name: messenger.message_handler, bus: event.bus }

  LaSalle\GroupZero\Logging\Domain\Model\Event\Handler\:
    resource: '%kernel.project_dir%/src/Logging/Domain/Model/Event/Handler/*.php'
    autoconfigure: false
    tags:
      - { name: messenger.message_handler, bus: event.bus }

  # Custom ExceptionListener, without priority to -32 overrides de logKernelException
  LaSalle\GroupZero\Logging\Infrastructure\Framework\EventListener\ErrorListener:
    tags:
      - { name: kernel.event_listener, event: kernel.exception, priority: -32 }

  LaSalle\GroupZero\Logging\Infrastructure\Framework\Controller\V1\ValueResolver\CreateLogEntryRequestValueResolver:
    tags:
      - { name: controller.argument_value_resolver, priority: 50 }

  #    pdo_connection:
  #        class: PDO
  #        arguments:
  #            - '%env(resolve:DATABASE_DNS)%'
  #            - '%env(resolve:DATABASE_USER)%'
  #            - '%env(resolve:DATABASE_PASSWORD)%'
  #            - !php/const PDO::ATTR_ERRMODE: !php/const PDO::ERRMODE_EXCEPTION
  #              !php/const PDO::ATTR_DEFAULT_FETCH_MODE: !php/const PDO::FETCH_ASSOC
  #              !php/const PDO::ATTR_EMULATE_PREPARES: false

  PDO:
    class: PDO
    factory: ['LaSalle\GroupZero\Logging\Infrastructure\Persistence\Pdo\PdoFactory', 'create']
    arguments:
      - '%env(resolve:DATABASE_DNS)%'
      - '%env(resolve:DATABASE_USER)%'
      - '%env(resolve:DATABASE_PASSWORD)%'

  LaSalle\GroupZero\Logging\Infrastructure\Persistence\Pdo\LogSummaryPdoRepository:
    arguments:
      $tableName: '%env(resolve:DATABASE_LOG_SUMMARY_TABLE_NAME)%'

  LaSalle\GroupZero\Logging\Infrastructure\Persistence\Doctrine\Repository\LogSummaryDbalRepository:
    arguments:
      $tableName: '%env(resolve:DATABASE_LOG_SUMMARY_TABLE_NAME)%'


